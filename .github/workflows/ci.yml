name: CI

on: [push, pull_request]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "1.0.0"
      - name: Install dependencies with Bun
        run: bun install --frozen-lockfile
      - name: Pull environment variables
        run: bun vercel env pull --environment development .env --token ${{ secrets.VERCEL_TOKEN }}
      - name: Cache Next.js
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/bun.lockb') }}-
      - name: Build
        run: bun run build
  lint:
    name: Lint

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "1.0.0"
      - name: Install dependencies with Bun
        run: bun install --frozen-lockfile
      - name: Lint
        run: bun run lint
